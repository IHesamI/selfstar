import React from "react";
import ContentsPreview from "./ContentsPreview";
import { useLang } from "../../../hooks/useLang";

export default function Slides() {
  return (
    <div className={`category-children-container`}>
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "امروزه سیستم‌های هم‌جوشی اطلاعات بصورت گسترده‌ در زمینه‌های مختلفی مانند پردازش‌های علمی، شبکه‌های حسگر، پردازش تصویر و ویدئو بکار می‌روند. یکی از زمینه‌های مهمی که هم‌جوشی اطلاعات در آن کاربرد دارد سامانه‌های چندعامله خودتطبیق هستند. سامانه‌های چندعامله، وظایف خود را بین عامل‌هایشان تقسیم می‌کنند و این سیستم‌های توزیع شده در برخی زمینه‌ها می‌توانند بهتر از سیستم‌های متمرکز عمل کنند. ویژگی منحصر بفرد سامانه‌های خودتطبیق این است که خود سیستم به‌تنهایی می‌توانند برای خود و عامل‌هایش تصمیم‌گیری کند. در این سمینار، ادبیات موضوع و برخی از کارهای انجام شده در این زمینه بررسی خواهند شد. در این راستا سیستم هم‌جوشی اطلاعات توزیع شده و کنترل شده‌ی پویا، هم‌جوشی اطلاعات در سامانه‌های چندعامله براساس معیار قابلیت اطمینان، یک روش ارزیابی وضعیت انفجار سنگ براساس هم‌جوشی اطلاعات چندعامله و یک سیستم کنترلی چند‌عامله با هم‌جوشی اطلاعات برای ساختمان‌های هوشمند براساس مدل آسایش مورد بررسی قرار خواهند گرفت. با بررسی کارهای انجام شده دراین زمینه، به پیشنهاداتی در زمینه‌ی کارهای آتی دست یابیم. واژگان کلیدی: سیستم‌های چندعامله، هم‌جوشی اطلاعات، خودتطبیقی، ترکیب اطلاعات"
        }
        link={"/#/12"}
      />
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "بسیاری از سیستم‏‏ های امروزی نمی توانند خود را با تغییرات در نیازمندی ها یا نقص های مؤلفه ها وفق دهند. برای نگهداری از این سیستم ها نیاز به افراد متخصص و صرف هزینه ی زیاد است. به همین دلیل در سال های اخیر تلاش شده است تا سیستم هایی ساخته شوند که بتوانند به طور پویا خود را با محیط اجراییشان وفق دهند. یک نوع از این سیستم ها، سیستم های خودتطبیق هستند. بین سیستم های خودتطبیق و سیستم های نرم افزاری رایج تفاوت های زیادی است. این تفاوت ها باعث شده اند که جامعه ی مهندسی نرم افزار به دنبال روش های جدید برای توسعه ی این سیستم ها باشد. یکی از این روش ها روش های صوری هستند. مطالعات زیادی در زمینه ی کاربرد روش های صوری در سیستم های خودتطبیق انجام گرفته است. با استخراج نکاتی که کمتر مورد توجه قرار گرفته اند، مسیر ما برای ادامه ی این تحقیق در پایان نامه مشخص می شود. کلمات کلیدی: سیستم های خودتطبیق، پردازش خودمختار، چرخه خودتطبیقی، سیستم های چندعامله، مدل سازی صوری، وارسی صوری ."
        }
        link={"/#/12"}
      />
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "بسیاری از سیستم‏‏ های امروزی نمی توانند خود را با تغییرات در نیازمندی ها یا نقص های مؤلفه ها وفق دهند. برای نگهداری از این سیستم ها نیاز به افراد متخصص و صرف هزینه ی زیاد است. به همین دلیل در سال های اخیر تلاش شده است تا سیستم هایی ساخته شوند که بتوانند به طور پویا خود را با محیط اجراییشان وفق دهند. یک نوع از این سیستم ها، سیستم های خودتطبیق هستند. بین سیستم های خودتطبیق و سیستم های نرم افزاری رایج تفاوت های زیادی است. این تفاوت ها باعث شده اند که جامعه ی مهندسی نرم افزار به دنبال روش های جدید برای توسعه ی این سیستم ها باشد. یکی از این روش ها روش های صوری هستند. مطالعات زیادی در زمینه ی کاربرد روش های صوری در سیستم های خودتطبیق انجام گرفته است. با استخراج نکاتی که کمتر مورد توجه قرار گرفته اند، مسیر ما برای ادامه ی این تحقیق در پایان نامه مشخص می شود. کلمات کلیدی: سیستم های خودتطبیق، پردازش خودمختار، چرخه خودتطبیقی، سیستم های چندعامله، مدل سازی صوری، وارسی صوری ."
        }
        link={"/#/12"}
      />
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "بسیاری از سیستم‏‏ های امروزی نمی توانند خود را با تغییرات در نیازمندی ها یا نقص های مؤلفه ها وفق دهند. برای نگهداری از این سیستم ها نیاز به افراد متخصص و صرف هزینه ی زیاد است. به همین دلیل در سال های اخیر تلاش شده است تا سیستم هایی ساخته شوند که بتوانند به طور پویا خود را با محیط اجراییشان وفق دهند. یک نوع از این سیستم ها، سیستم های خودتطبیق هستند. بین سیستم های خودتطبیق و سیستم های نرم افزاری رایج تفاوت های زیادی است. این تفاوت ها باعث شده اند که جامعه ی مهندسی نرم افزار به دنبال روش های جدید برای توسعه ی این سیستم ها باشد. یکی از این روش ها روش های صوری هستند. مطالعات زیادی در زمینه ی کاربرد روش های صوری در سیستم های خودتطبیق انجام گرفته است. با استخراج نکاتی که کمتر مورد توجه قرار گرفته اند، مسیر ما برای ادامه ی این تحقیق در پایان نامه مشخص می شود. کلمات کلیدی: سیستم های خودتطبیق، پردازش خودمختار، چرخه خودتطبیقی، سیستم های چندعامله، مدل سازی صوری، وارسی صوری ."
        }
        link={"/#/12"}
      />
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "بسیاری از سیستم‏‏ های امروزی نمی توانند خود را با تغییرات در نیازمندی ها یا نقص های مؤلفه ها وفق دهند. برای نگهداری از این سیستم ها نیاز به افراد متخصص و صرف هزینه ی زیاد است. به همین دلیل در سال های اخیر تلاش شده است تا سیستم هایی ساخته شوند که بتوانند به طور پویا خود را با محیط اجراییشان وفق دهند. یک نوع از این سیستم ها، سیستم های خودتطبیق هستند. بین سیستم های خودتطبیق و سیستم های نرم افزاری رایج تفاوت های زیادی است. این تفاوت ها باعث شده اند که جامعه ی مهندسی نرم افزار به دنبال روش های جدید برای توسعه ی این سیستم ها باشد. یکی از این روش ها روش های صوری هستند. مطالعات زیادی در زمینه ی کاربرد روش های صوری در سیستم های خودتطبیق انجام گرفته است. با استخراج نکاتی که کمتر مورد توجه قرار گرفته اند، مسیر ما برای ادامه ی این تحقیق در پایان نامه مشخص می شود. کلمات کلیدی: سیستم های خودتطبیق، پردازش خودمختار، چرخه خودتطبیقی، سیستم های چندعامله، مدل سازی صوری، وارسی صوری ."
        }
        link={"/#/12"}
      />
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "بسیاری از سیستم‏‏ های امروزی نمی توانند خود را با تغییرات در نیازمندی ها یا نقص های مؤلفه ها وفق دهند. برای نگهداری از این سیستم ها نیاز به افراد متخصص و صرف هزینه ی زیاد است. به همین دلیل در سال های اخیر تلاش شده است تا سیستم هایی ساخته شوند که بتوانند به طور پویا خود را با محیط اجراییشان وفق دهند. یک نوع از این سیستم ها، سیستم های خودتطبیق هستند. بین سیستم های خودتطبیق و سیستم های نرم افزاری رایج تفاوت های زیادی است. این تفاوت ها باعث شده اند که جامعه ی مهندسی نرم افزار به دنبال روش های جدید برای توسعه ی این سیستم ها باشد. یکی از این روش ها روش های صوری هستند. مطالعات زیادی در زمینه ی کاربرد روش های صوری در سیستم های خودتطبیق انجام گرفته است. با استخراج نکاتی که کمتر مورد توجه قرار گرفته اند، مسیر ما برای ادامه ی این تحقیق در پایان نامه مشخص می شود. کلمات کلیدی: سیستم های خودتطبیق، پردازش خودمختار، چرخه خودتطبیقی، سیستم های چندعامله، مدل سازی صوری، وارسی صوری ."
        }
        link={"/#/12"}
      />
      <ContentsPreview
        title={"مدل سازی صوری سیستم های خودتطبیق توزیع شده"}
        publishedDate={"اسفند ۵ام, ۱۳۹۶"}
        categories={["seminar"]}
        description={
          "بسیاری از سیستم‏‏ های امروزی نمی توانند خود را با تغییرات در نیازمندی ها یا نقص های مؤلفه ها وفق دهند. برای نگهداری از این سیستم ها نیاز به افراد متخصص و صرف هزینه ی زیاد است. به همین دلیل در سال های اخیر تلاش شده است تا سیستم هایی ساخته شوند که بتوانند به طور پویا خود را با محیط اجراییشان وفق دهند. یک نوع از این سیستم ها، سیستم های خودتطبیق هستند. بین سیستم های خودتطبیق و سیستم های نرم افزاری رایج تفاوت های زیادی است. این تفاوت ها باعث شده اند که جامعه ی مهندسی نرم افزار به دنبال روش های جدید برای توسعه ی این سیستم ها باشد. یکی از این روش ها روش های صوری هستند. مطالعات زیادی در زمینه ی کاربرد روش های صوری در سیستم های خودتطبیق انجام گرفته است. با استخراج نکاتی که کمتر مورد توجه قرار گرفته اند، مسیر ما برای ادامه ی این تحقیق در پایان نامه مشخص می شود. کلمات کلیدی: سیستم های خودتطبیق، پردازش خودمختار، چرخه خودتطبیقی، سیستم های چندعامله، مدل سازی صوری، وارسی صوری ."
        }
        link={"/#/12"}
      />
    </div>
  );
}
